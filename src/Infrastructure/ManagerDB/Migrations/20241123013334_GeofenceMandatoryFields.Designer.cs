// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrackHub.Manager.Infrastructure.ManagerDB;

#nullable disable

namespace TrackHub.Manager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241123013334_GeofenceMandatoryFields")]
    partial class GeofenceMandatoryFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrackHub.Manager.Infrastructure.ManagerDB.Entities.Geofence", b =>
                {
                    b.Property<Guid>("GeofenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("accountid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<short>("Color")
                        .HasColumnType("smallint")
                        .HasColumnName("color");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<Polygon>("Geom")
                        .IsRequired()
                        .HasColumnType("geometry (Polygon, 4326)")
                        .HasColumnName("geom");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<short>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.HasKey("GeofenceId");

                    b.HasIndex("Geom")
                        .HasDatabaseName("geofence_idx");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Geom"), "gist");

                    b.ToTable("geofences", "geofencing");
                });

            modelBuilder.Entity("TrackHub.Manager.Infrastructure.ManagerDB.Entities.VwTransporterPosition", b =>
                {
                    b.Property<Guid>("TransporterId")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Point>("Geom")
                        .IsRequired()
                        .HasColumnType("geometry(Point, 4326)")
                        .HasColumnName("geom");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("TransporterId");

                    b.ToTable((string)null);

                    b.ToView("vw_transporter_position", "geofencing");
                });

            modelBuilder.Entity("TrackHub.Manager.Infrastructure.ManagerDB.Entities.VwUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("accountid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.ToTable((string)null);

                    b.ToView("vw_users", "geofencing");
                });
#pragma warning restore 612, 618
        }
    }
}
